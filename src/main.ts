Unexpected character ('-' (code 45)) in numeric value: expected digit (0-9) to follow minus sign, for valid numeric value
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 2] reading POST https://eip-rec.axa-fr.intraxa/ws/fr-ged-api-documents-v2-vs/document/binary/content


et dans le cause com.fasterxml.jackson.core.JsonParseException: Unexpected character ('-' (code 45)) in numeric value: expected digit (0-9) to follow minus sign, for valid numeric value
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 2]


    @Bean
    public GetDocumentApi frGetApiDocumentsV2Vs(RestClientBuilderFactory restClientBuilderFactory){
        return restClientBuilderFactory
                .configureFromEnvironment(GED_REST_SERVICE)
                //.withInterceptors(template->template.header("Accept", ""))
                //.withCodec(new Encoder.Default(), new Decoder.Default())
                .createClient(GetDocumentApi.class);
    }


    public DocumentBinaryContentPost200Response getDocumentGed(String user, List<SearchDocumentsMetadatasResponseDocumentsInner> documents,
                                                               String... projects) {
        for (SearchDocumentsMetadatasResponseDocumentsInner document : documents) {
            GetDocumentContentRequest input = initGetDocumentRequest(user, document.getDocId(),projects);
               return getDocApi.documentBinaryContentPost(input);
        }

        return null ;
    }


/*
 * GED - GetDocumentContent
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.axa.pfel.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.axa.pfel.client.model.GetDocumentContentResponse;
import java.io.File;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DocumentBinaryContentPost200Response
 */
@JsonPropertyOrder({
  DocumentBinaryContentPost200Response.JSON_PROPERTY_GET_DOCUMENT_CONTENT_RESPONSE,
  DocumentBinaryContentPost200Response.JSON_PROPERTY_FILE
})
@JsonTypeName("_document_binary_content_post_200_response")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-05T13:08:36.846685100+02:00[Europe/Paris]", comments = "Generator version: 7.9.0")
public class DocumentBinaryContentPost200Response {
  public static final String JSON_PROPERTY_GET_DOCUMENT_CONTENT_RESPONSE = "getDocumentContentResponse";
  private GetDocumentContentResponse getDocumentContentResponse;

  public static final String JSON_PROPERTY_FILE = "file";
  private feign.form.FormData file;

  public DocumentBinaryContentPost200Response() {
  }

  public DocumentBinaryContentPost200Response getDocumentContentResponse(GetDocumentContentResponse getDocumentContentResponse) {
    
    this.getDocumentContentResponse = getDocumentContentResponse;
    return this;
  }

  /**
   * Get getDocumentContentResponse
   * @return getDocumentContentResponse
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GET_DOCUMENT_CONTENT_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GetDocumentContentResponse getGetDocumentContentResponse() {
    return getDocumentContentResponse;
  }


  @JsonProperty(JSON_PROPERTY_GET_DOCUMENT_CONTENT_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGetDocumentContentResponse(GetDocumentContentResponse getDocumentContentResponse) {
    this.getDocumentContentResponse = getDocumentContentResponse;
  }


  public DocumentBinaryContentPost200Response file(feign.form.FormData file) {
    
    this.file = file;
    return this;
  }

  /**
   * Get file
   * @return file
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public feign.form.FormData getFile() {
    return file;
  }


  @JsonProperty(JSON_PROPERTY_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFile(feign.form.FormData file) {
    this.file = file;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentBinaryContentPost200Response documentBinaryContentPost200Response = (DocumentBinaryContentPost200Response) o;
    return Objects.equals(this.getDocumentContentResponse, documentBinaryContentPost200Response.getDocumentContentResponse) &&
        Objects.equals(this.file, documentBinaryContentPost200Response.file);
  }

  @Override
  public int hashCode() {
    return Objects.hash(getDocumentContentResponse, file);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentBinaryContentPost200Response {\n");
    sb.append("    getDocumentContentResponse: ").append(toIndentedString(getDocumentContentResponse)).append("\n");
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


