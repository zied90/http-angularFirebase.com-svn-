    public DocumentBinaryContentPost200Response getDocumentGed(String user, List<SearchDocumentsMetadatasResponseDocumentsInner> documents,
                                                               String... projects) {
        DocumentBinaryContentPost200Response response=new DocumentBinaryContentPost200Response();
        
        for (SearchDocumentsMetadatasResponseDocumentsInner document : documents) {
            GetDocumentContentRequest input = initGetDocumentRequest(user, document.getDocId(),projects);
               return getDocApi.documentBinaryContentPost(input);
        }

        return null ;
    }


/*
 * GED - GetDocumentContent
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.axa.pfel.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.axa.pfel.client.model.GetDocumentContentResponse;
import java.io.File;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DocumentBinaryContentPost200Response
 */
@JsonPropertyOrder({
  DocumentBinaryContentPost200Response.JSON_PROPERTY_GET_DOCUMENT_CONTENT_RESPONSE,
  DocumentBinaryContentPost200Response.JSON_PROPERTY_FILE
})
@JsonTypeName("_document_binary_content_post_200_response")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-06T17:03:44.921988900+02:00[Europe/Paris]", comments = "Generator version: 7.9.0")
public class DocumentBinaryContentPost200Response {
  public static final String JSON_PROPERTY_GET_DOCUMENT_CONTENT_RESPONSE = "getDocumentContentResponse";
  private GetDocumentContentResponse getDocumentContentResponse;

  public static final String JSON_PROPERTY_FILE = "file";
  private feign.form.FormData file;

  public DocumentBinaryContentPost200Response() {
  }

  public DocumentBinaryContentPost200Response getDocumentContentResponse(GetDocumentContentResponse getDocumentContentResponse) {
    
    this.getDocumentContentResponse = getDocumentContentResponse;
    return this;
  }

  /**
   * Get getDocumentContentResponse
   * @return getDocumentContentResponse
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GET_DOCUMENT_CONTENT_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GetDocumentContentResponse getGetDocumentContentResponse() {
    return getDocumentContentResponse;
  }


  @JsonProperty(JSON_PROPERTY_GET_DOCUMENT_CONTENT_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGetDocumentContentResponse(GetDocumentContentResponse getDocumentContentResponse) {
    this.getDocumentContentResponse = getDocumentContentResponse;
  }


  public DocumentBinaryContentPost200Response file(feign.form.FormData file) {
    
    this.file = file;
    return this;
  }

  /**
   * Get file
   * @return file
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public feign.form.FormData getFile() {
    return file;
  }


  @JsonProperty(JSON_PROPERTY_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFile(feign.form.FormData file) {
    this.file = file;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentBinaryContentPost200Response documentBinaryContentPost200Response = (DocumentBinaryContentPost200Response) o;
    return Objects.equals(this.getDocumentContentResponse, documentBinaryContentPost200Response.getDocumentContentResponse) &&
        Objects.equals(this.file, documentBinaryContentPost200Response.file);
  }

  @Override
  public int hashCode() {
    return Objects.hash(getDocumentContentResponse, file);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentBinaryContentPost200Response {\n");
    sb.append("    getDocumentContentResponse: ").append(toIndentedString(getDocumentContentResponse)).append("\n");
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

/*
 * GED - GetDocumentContent
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.axa.pfel.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GetDocumentContentResponse
 */
@JsonPropertyOrder({
  GetDocumentContentResponse.JSON_PROPERTY_STATUS,
  GetDocumentContentResponse.JSON_PROPERTY_NAME,
  GetDocumentContentResponse.JSON_PROPERTY_EXTENSION,
  GetDocumentContentResponse.JSON_PROPERTY_MIME_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-06T17:03:44.921988900+02:00[Europe/Paris]", comments = "Generator version: 7.9.0")
public class GetDocumentContentResponse {
  public static final String JSON_PROPERTY_STATUS = "Status";
  private String status;

  public static final String JSON_PROPERTY_NAME = "Name";
  private String name;

  public static final String JSON_PROPERTY_EXTENSION = "Extension";
  private String extension;

  public static final String JSON_PROPERTY_MIME_TYPE = "MimeType";
  private String mimeType;

  public GetDocumentContentResponse() {
  }

  public GetDocumentContentResponse status(String status) {
    
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public GetDocumentContentResponse name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public GetDocumentContentResponse extension(String extension) {
    
    this.extension = extension;
    return this;
  }

  /**
   * Get extension
   * @return extension
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExtension() {
    return extension;
  }


  @JsonProperty(JSON_PROPERTY_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtension(String extension) {
    this.extension = extension;
  }


  public GetDocumentContentResponse mimeType(String mimeType) {
    
    this.mimeType = mimeType;
    return this;
  }

  /**
   * Get mimeType
   * @return mimeType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMimeType() {
    return mimeType;
  }


  @JsonProperty(JSON_PROPERTY_MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetDocumentContentResponse getDocumentContentResponse = (GetDocumentContentResponse) o;
    return Objects.equals(this.status, getDocumentContentResponse.status) &&
        Objects.equals(this.name, getDocumentContentResponse.name) &&
        Objects.equals(this.extension, getDocumentContentResponse.extension) &&
        Objects.equals(this.mimeType, getDocumentContentResponse.mimeType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, name, extension, mimeType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetDocumentContentResponse {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
package fr.axa.pfel.client.impl;

import fr.axa.honey.client.rest.feign.ApiClient;
import fr.axa.honey.client.rest.feign.EncodingUtils;
import fr.axa.pfel.client.model.ApiResponse;

import fr.axa.pfel.client.model.BusinessError;
import fr.axa.pfel.client.model.DocumentBinaryContentPost200Response;
import fr.axa.pfel.client.model.GetDocumentContentRequest;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import feign.*;

@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-06T17:03:44.921988900+02:00[Europe/Paris]", comments = "Generator version: 7.9.0")
public interface GetDocumentApi extends ApiClient.Api {


  /**
   * GetDocumentContent / multi part response
   * 
   * @param getDocumentContentRequest GetDocumentContent Request (required)
   * @return DocumentBinaryContentPost200Response
   */
  @RequestLine("POST /document/binary/content")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json,multipart/form-data",
  })
  DocumentBinaryContentPost200Response documentBinaryContentPost(GetDocumentContentRequest getDocumentContentRequest);

  /**
   * GetDocumentContent / multi part response
   * Similar to <code>documentBinaryContentPost</code> but it also returns the http response headers .
   * 
   * @param getDocumentContentRequest GetDocumentContent Request (required)
   * @return A ApiResponse that wraps the response boyd and the http headers.
   */
  @RequestLine("POST /document/binary/content")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json,multipart/form-data",
  })
  ApiResponse<DocumentBinaryContentPost200Response> documentBinaryContentPostWithHttpInfo(GetDocumentContentRequest getDocumentContentRequest);


}
    }
    @Bean
    public GetDocumentApi frGetApiDocumentsV2Vs(RestClientBuilderFactory restClientBuilderFactory){
        return restClientBuilderFactory
                .configureFromEnvironment(GED_REST_SERVICE)
                //.withInterceptors(template->template.header("Accept", ""))
                //.withCodec(new Encoder.Default(), new Decoder.Default())
                .createClient(GetDocumentApi.class);
    }
Unexpected character ('-' (code 45)) in numeric value: expected digit (0-9) to follow minus sign, for valid numeric value
at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 2] reading POST https://eip-rec.axa-fr.intraxa/ws/fr-ged-api-documents-v2-vs/document/binary/content
